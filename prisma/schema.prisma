// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Company {
    id String @id @default(uuid())
    userId String
    name String @db.Text
    description String? @db.Text
    profileImage String @db.Text
    code String @db.Text
    phone String @db.Text
    country String @db.Text
    website String @db.Text


    contacts Contact[]

    events Event[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}


model Contact {
  id String @id @default(uuid())

  comapnyId String? @db.Text

  name String @db.Text
  role String? @db.Text
  email String @db.Text
  phone String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company Company? @relation(fields: [comapnyId], references: [id], onDelete: Cascade)

  @@index(comapnyId)
}

// model Event{
//   id String @id @default(uuid())
//   companyId String
//   title String
//   start DateTime 
//   allDay Boolean
//   timeFormat String

//   company Company @relation(fields: [companyId], references: [id])

//   createdAt DateTime @default(now())
//   updateAt DateTime @updatedAt

  
// }

model Event {
  id        Int      @id @default(autoincrement())
  companyId String   
  title     String
  start     DateTime
  allDay    Boolean
  timeFormat String

  company   Company  @relation(fields: [companyId], references: [id])
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  @@index(companyId)
}

